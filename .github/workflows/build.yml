name: Build/Release

on: push

jobs:
  build-release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: Install backend dependencies
        id: install-backend-deps
        run: |
          cd backend
          pip install build
          pip install -U -r requirements.txt

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install frontend dependencies
        id: install-frontend-deps
        run: |
          cd electron
          npm i --yes

      - name: Build backend executable
        id: build-backend
        run: npm run build-backend

      - name: Prepare for app notarization
        if: startsWith(matrix.os, 'macos')
        # Import Apple API key for app notarization on macOS
        run: |
          mkdir -p ~/private_keys/
          echo "${{ secrets.MAC_API_KEY }}" > ~/private_keys/AuthKey_${{ secrets.MAC_API_KEY_ID }}.p8

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          package_root: ./electron
          build_script_name: prebuild
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # macOS code signing certificate 
          mac_certs: ${{ secrets.MAC_CERTS }}
          mac_certs_password: ${{ secrets.MAC_CERTS_PASSWORD }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
        env:
          #Â auto updates
          GH_PAT_TOKEN: ${{ secrets.GH_TOKEN }}
          # macOS Notarization
          MAC_API_KEY_ID: ${{ secrets.MAC_API_KEY_ID }}
          MAC_API_KEY_ISSUER_ID: ${{ secrets.MAC_API_KEY_ISSUER_ID }}
          SKIP_NOTARIZE: ${{ !(startsWith(github.ref, 'refs/tags/v')) }}